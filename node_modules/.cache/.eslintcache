[{"/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/index.js":"1","/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/App.js":"2","/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/pages/New.js":"3","/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/pages/Home.js":"4","/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/pages/Diary.js":"5","/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/pages/Edit.js":"6","/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/components/RoutesTest.js":"7","/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/components/MyButton.js":"8","/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/components/MyHeader.js":"9","/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/components/DiaryList.js":"10","/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/components/DiaryItem.js":"11","/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/components/DiaryEditor.js":"12","/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/components/EmotionItem.js":"13","/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/utill/Date.js":"14","/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/utill/emotion.js":"15","/Users/hwak/Documents/workspace/Emotion-Diary/src/index.js":"16","/Users/hwak/Documents/workspace/Emotion-Diary/src/App.js":"17","/Users/hwak/Documents/workspace/Emotion-Diary/src/pages/Edit.js":"18","/Users/hwak/Documents/workspace/Emotion-Diary/src/pages/Diary.js":"19","/Users/hwak/Documents/workspace/Emotion-Diary/src/pages/New.js":"20","/Users/hwak/Documents/workspace/Emotion-Diary/src/pages/Home.js":"21","/Users/hwak/Documents/workspace/Emotion-Diary/src/utill/Date.js":"22","/Users/hwak/Documents/workspace/Emotion-Diary/src/utill/emotion.js":"23","/Users/hwak/Documents/workspace/Emotion-Diary/src/components/MyHeader.js":"24","/Users/hwak/Documents/workspace/Emotion-Diary/src/components/MyButton.js":"25","/Users/hwak/Documents/workspace/Emotion-Diary/src/components/DiaryList.js":"26","/Users/hwak/Documents/workspace/Emotion-Diary/src/components/DiaryEditor.js":"27","/Users/hwak/Documents/workspace/Emotion-Diary/src/components/EmotionItem.js":"28","/Users/hwak/Documents/workspace/Emotion-Diary/src/components/DiaryItem.js":"29"},{"size":254,"mtime":1687778136881,"results":"30","hashOfConfig":"31"},{"size":2679,"mtime":1691492311252,"results":"32","hashOfConfig":"31"},{"size":354,"mtime":1691410524207,"results":"33","hashOfConfig":"31"},{"size":1820,"mtime":1691492982330,"results":"34","hashOfConfig":"31"},{"size":2698,"mtime":1691410116141,"results":"35","hashOfConfig":"31"},{"size":1140,"mtime":1691410316116,"results":"36","hashOfConfig":"31"},{"size":361,"mtime":1686142961032,"results":"37","hashOfConfig":"31"},{"size":352,"mtime":1686555817934,"results":"38","hashOfConfig":"31"},{"size":319,"mtime":1686567028670,"results":"39","hashOfConfig":"31"},{"size":2592,"mtime":1690542474760,"results":"40","hashOfConfig":"31"},{"size":1123,"mtime":1691293364722,"results":"41","hashOfConfig":"31"},{"size":3753,"mtime":1691311111981,"results":"42","hashOfConfig":"31"},{"size":431,"mtime":1691309853616,"results":"43","hashOfConfig":"31"},{"size":86,"mtime":1688715338355,"results":"44","hashOfConfig":"31"},{"size":752,"mtime":1688796603812,"results":"45","hashOfConfig":"31"},{"size":254,"mtime":1687778136881,"results":"46","hashOfConfig":"47"},{"size":2679,"mtime":1691492311252,"results":"48","hashOfConfig":"47"},{"size":1140,"mtime":1691410316116,"results":"49","hashOfConfig":"47"},{"size":2698,"mtime":1691410116141,"results":"50","hashOfConfig":"47"},{"size":354,"mtime":1691410524207,"results":"51","hashOfConfig":"47"},{"size":1820,"mtime":1691492982330,"results":"52","hashOfConfig":"47"},{"size":86,"mtime":1688715338355,"results":"53","hashOfConfig":"47"},{"size":752,"mtime":1688796603812,"results":"54","hashOfConfig":"47"},{"size":319,"mtime":1686567028670,"results":"55","hashOfConfig":"47"},{"size":352,"mtime":1686555817934,"results":"56","hashOfConfig":"47"},{"size":2592,"mtime":1690542474760,"results":"57","hashOfConfig":"47"},{"size":3753,"mtime":1691311111981,"results":"58","hashOfConfig":"47"},{"size":431,"mtime":1691309853616,"results":"59","hashOfConfig":"47"},{"size":1123,"mtime":1691293364722,"results":"60","hashOfConfig":"47"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"124m9j8",{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1soiaig",{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/index.js",[],[],"/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/App.js",["154"],[],"import React,{ useReducer, useRef, useEffect } from \"react\";\n\nimport \"./App.css\";\nimport {BrowserRouter, Routes, Route} from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport New from \"./pages/New\";\nimport Edit from \"./pages/Edit\";\nimport Diary from \"./pages/Diary\";\nimport { type } from \"@testing-library/user-event/dist/type\";\n\nconst reducer = (state,action) => {\n  let newState = [];\n  switch(action.type) {\n    case 'INIT':{\n      return action.data;\n    }\n    case 'CREATE':{\n      newState = [action.data, ...state];\n      break;\n    }\n    case 'REMOVE':{\n      newState = state.filter((it)=>it.id !== action.targetId);\n      break;\n    }\n    case 'EDIT':{\n      newState = state.map((it)=>it.id === action.data.id? {...action.data}: it);\n      break;\n    }\n    default:\n      return state;\n  }\n\n  localStorage.setItem('diary',JSON.stringify(newState));\n  return newState;\n}\n\nexport const DiaryStateContext = React.createContext();\nexport const DiaryDispatchContext = React.createContext();\n\nfunction App() {\n  const [data,dispatch] = useReducer(reducer,[]);\n\n  useEffect(() => {\n    const localData = localStorage.getItem('diary');\n    if(localData) {\n      const diaryList = JSON.parse(localData).sort((a,b) => parseInt(b.id) - parseInt(a.id));\n\n      if (diaryList.length >= 1) {\n        dataId.current = parseInt(diaryList[0].id) + 1;\n        dispatch({type: \"INIT\", data: diaryList});\n      }\n    }\n  },[]);\n\n  const dataId = useRef(6);\n\n   // CREATE\n  const onCreate = (date,content,emotion)=> {\n    dispatch({type : \"CREATE\",\n      data:{\n        id: dataId.current,\n        date: new Date(date).getTime(),\n        content,\n        emotion,\n      },\n    });\n    dataId.current += 1;\n  };\n\n   // REMOVE\n  const onRemove = (targetId) => {\n    dispatch({type:\"REMOVE\",targetId});\n  };\n  \n   // EDIT\n  const onEdit = (targetId,date,content,emotion)=>{\n    dispatch({\n      type:\"EDIT\",\n      data:{\n        id : targetId,\n        date : new Date(date).getTime(),\n        content,\n        emotion,\n      },\n    });\n  };\n  \n  return (\n    <DiaryStateContext.Provider value={data}>\n      <DiaryDispatchContext.Provider\n        value={{\n          onCreate,\n          onEdit,\n          onRemove\n        }}\n      >\n        <BrowserRouter>\n        <div className=\"App\">\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/new\" element={<New />} />\n            <Route path=\"/edit/:id\" element={<Edit />} />\n            <Route path=\"/diary/:id\" element={<Diary />} />\n          </Routes>\n        </div>\n      </BrowserRouter>\n    </DiaryDispatchContext.Provider>\n    </DiaryStateContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/pages/New.js",[],[],"/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/pages/Home.js",[],[],"/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/pages/Diary.js",["155","156","157"],[],"import { useContext, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { DiaryStateContext } from \"../App\";\n\nimport { getStringDate } from \"../utill/Date\";\nimport { emotionList } from \"../utill/emotion\";\n\nimport MyHeader from \"../components/MyHeader\";\nimport MyButton from \"../components/MyButton\";\n\nconst Diary = () => {\n\n    const {id} = useParams();\n    const diaryList = useContext(DiaryStateContext);\n    const navigate = useNavigate();\n    const [data,setData] = useState();\n\n    useEffect(()=> {\n        const titleElemnet = document.getElementsByTagName('title')[0];\n        titleElemnet.innerHTML = `감정 일기장 - ${id}번 일기`;\n    },[]);\n\n    useEffect(()=>{\n        if(diaryList.length >= 1) {\n            const targetDiary = diaryList.find((it) => parseInt(it.id) === parseInt(id));\n\n            if (targetDiary) {\n                // 일기가 존재할 때\n                setData(targetDiary);\n            } else {\n                // 일기가 없을 때\n                alert(\"없는 일기입니다.\");\n                navigate('/',{replace:true});\n            }\n        };\n    },[id,diaryList]);\n\n    if (!data) {\n        return <div className=\"DiaryPage\">로딩중입니다...</div>\n    } else {\n\n        const curEmotionData = emotionList.find((it)=> parseInt(it.emotion_id) === parseInt(data.emotion));\n\n        return (\n            <div className=\"DiaryPage\">\n                <MyHeader \n                headText={`${getStringDate(new Date(data.date))} 기록`}\n                leftChild={\n                    <MyButton text={\"< 뒤로가기\"} onClick={() => navigate(-1)} />\n                }\n                rightChild={\n                    <MyButton text={\"수정하기\"} onClick={() => navigate(`/edit/${data.id}`)} />\n                }\n                />\n                <article>\n                    <section>\n                        <h4>오늘의 감정</h4>\n                        <div className={[\"diary_img_wrapper\", `diary_img_wrapper_${data.emotion}`].join(\" \")}>\n                            <img src={curEmotionData.emotion_img} />\n                            <div className=\"emotion_descript\">\n                                {curEmotionData.emotion_descript}\n                            </div>\n                        </div>\n                    </section>\n                    <section>\n                        <h4>오늘의 일기</h4>\n                        <div className=\"diary_content_wrapper\">\n                            <p>{data.content}</p>\n                        </div>\n                    </section>\n                </article>\n            </div>\n        );\n    } \n};\n\nexport default Diary;","/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/pages/Edit.js",["158","159"],[],"import { useState, useContext, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { DiaryStateContext } from \"../App\";\nimport DiaryEditor from \"../components/DiaryEditor\";\n\nconst Edit = () => {\n\n    const [originData, setOriginData] = useState();\n    const navigate = useNavigate();\n    const { id } = useParams();\n    const diaryList = useContext(DiaryStateContext);\n\n    useEffect(()=> {\n        const titleElemnet = document.getElementsByTagName('title')[0];\n        titleElemnet.innerHTML = `감정 일기장 - ${id}번 일기 수정`;\n    },[]);\n\n    useEffect(() => {\n        if (diaryList.length >= 1) {\n            const targetDiary = diaryList.find((it)=>parseInt(it.id) === parseInt(id));\n            if (targetDiary) {\n                setOriginData(targetDiary);\n            } else {\n                alert(\"없는 일기입니다.\");\n                navigate('/', {replace: true });\n            }\n        };\n    },[id, diaryList]);\n\n    return (\n        <div>\n            {originData && <DiaryEditor isEdit={true} originData={originData} />}\n        </div>\n    );\n};\n\nexport default Edit;","/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/components/RoutesTest.js",[],[],"/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/components/MyButton.js",[],[],"/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/components/MyHeader.js",[],[],"/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/components/DiaryList.js",["160"],[],"import React, {useEffect, useState} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport MyButton from \"./MyButton\";\nimport DiaryItem from \"./DiaryItem\";\n\nconst ControlMenu = React.memo(({value, onChange, optionList}) => {\n    return (\n        <select className=\"ControlMenu\" value={value} onChange={(e)=>onChange(e.target.value)}>\n            {optionList.map((it,idx)=> (\n                <option key={idx} value={it.value}>\n                    {it.name}\n                </option>\n            ))}\n        </select>\n    );\n});\n\nconst sortOptionList = [\n    {value:\"latest\",name:\"최신순\"},\n    {value:\"oldest\",name:\"오래된순\"}\n]\n\nconst filterOptionList = [\n    {value:\"all\",name:\"전부다\"},\n    {value:\"good\",name:\"좋은 감정만\"},\n    {value:\"bad\",name:\"안좋은 감정만\"}\n]\n\nconst DiaryList = ({diaryList}) => {\n    const navigate = useNavigate();\n    const [sortType, setSortType] = useState(\"latest\");\n    const [filter, setFilter] = useState(\"all\");\n\n    const getProcessedDiaryList = () => {\n\n        const filterCallBack = (item) => {\n            if (filter === \"good\") {\n                return parseInt(item.emotion) <= 3;\n            } else {\n                return parseInt(item.emotion) > 3;\n            }\n        }\n\n        const compare = (a,b) => {\n            if (sortType === 'latest') {\n                return parseInt(b.date) - parseInt(a.date);\n            } else {\n                return parseInt(a.date) - parseInt(b.date);\n            }\n        }\n        const copyList = JSON.parse(JSON.stringify(diaryList));\n        const filteredList = filter === \"all\" ? copyList : copyList.filter((it)=>filterCallBack(it));\n        const sortedList = filteredList.sort(compare);\n        return sortedList;\n    };\n\n    return (\n        <div className=\"DiaryList\">\n\n            <div className=\"menu_wrapper\">\n                <div className=\"left_col\">\n                <ControlMenu value={sortType} onChange={setSortType} optionList={sortOptionList} />\n                <ControlMenu\n                    value={filter}\n                    onChange={setFilter}\n                    optionList={filterOptionList}\n                />\n                </div>\n                <div className=\"right_col\">\n                <MyButton type={\"positive\"} text={\"새 일기쓰기\"} onClick={()=>navigate(\"/new\")} />\n                </div>\n            </div>\n            {getProcessedDiaryList().map((it)=> (\n                <DiaryItem key={it.id} {...it} />\n            ))}\n        </div>\n    );\n};\n\nDiaryList.defaultProps = {\n  disryList: []\n};\n\nexport default DiaryList;","/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/components/DiaryItem.js",["161","162"],[],"import React from \"react\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport MyButton from \"./MyButton\";\n\nconst DiaryItem = ({id, emotion, content, date}) => {\n    // const env = process.env;\n    // env.PUBLIC_URL = env.PUBLIC_URL || \"\";\n\n    const navigate = useNavigate();\n\n    const strDate = new Date(parseInt(date)).toLocaleDateString();\n\n    const goDetail = () => {\n        navigate(`/diary/${id}`);\n    }\n\n    const goEdit = () => {\n        navigate(`/edit/${id}`);\n    }\n\n    return <div className=\"DiaryItem\">\n        <div onClick={goDetail} className={[\"emotion_img_wrapper\", `emotion_img_wrapper_${emotion}`].join(\" \")}>\n            <img src={process.env.PUBLIC_URL + `assets/emotion${emotion}.png`} />\n        </div>\n        <div onClick={goDetail} className=\"info_wrapper\">\n            <div className=\"diary_date\">{strDate}</div>\n            <div className=\"diary_content_preview\">{content.slice(0, 25)}</div>\n        </div>\n        <div onClick={goEdit} className=\"btn_wrapper\">\n            <MyButton text={\"수정하기\"} />\n        </div>\n    </div>\n};\n\nexport default React.memo(DiaryItem);","/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/components/DiaryEditor.js",[],[],"/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/components/EmotionItem.js",["163"],[],"import React from \"react\";\n\nconst EmotionItem = ({emotion_id, emotion_img, emotion_descript, onClick, isSeleted}) => {\n    return (\n        <div onClick={() => onClick(emotion_id)} className={[\"EmotionItem\", isSeleted ? `EmotionItem_on_${emotion_id}` : `EmotionItem_off`].join(\" \")}>\n            <img src={emotion_img} />\n            <span>{emotion_descript}</span>\n        </div>\n    );\n};\n\nexport default React.memo(EmotionItem);","/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/utill/Date.js",[],[],"/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/utill/emotion.js",[],[],"/Users/hwak/Documents/workspace/Emotion-Diary/src/index.js",[],[],"/Users/hwak/Documents/workspace/Emotion-Diary/src/App.js",["164"],[],"/Users/hwak/Documents/workspace/Emotion-Diary/src/pages/Edit.js",["165","166"],[],"/Users/hwak/Documents/workspace/Emotion-Diary/src/pages/Diary.js",["167","168","169"],[],"/Users/hwak/Documents/workspace/Emotion-Diary/src/pages/New.js",[],[],"/Users/hwak/Documents/workspace/Emotion-Diary/src/pages/Home.js",[],[],"/Users/hwak/Documents/workspace/Emotion-Diary/src/utill/Date.js",[],[],"/Users/hwak/Documents/workspace/Emotion-Diary/src/utill/emotion.js",[],[],"/Users/hwak/Documents/workspace/Emotion-Diary/src/components/MyHeader.js",[],[],"/Users/hwak/Documents/workspace/Emotion-Diary/src/components/MyButton.js",[],[],"/Users/hwak/Documents/workspace/Emotion-Diary/src/components/DiaryList.js",["170"],[],"/Users/hwak/Documents/workspace/Emotion-Diary/src/components/DiaryEditor.js",[],[],"/Users/hwak/Documents/workspace/Emotion-Diary/src/components/EmotionItem.js",["171"],[],"/Users/hwak/Documents/workspace/Emotion-Diary/src/components/DiaryItem.js",["172","173"],[],{"ruleId":"174","severity":1,"message":"175","line":10,"column":10,"nodeType":"176","messageId":"177","endLine":10,"endColumn":14},{"ruleId":"178","severity":1,"message":"179","line":21,"column":7,"nodeType":"180","endLine":21,"endColumn":9,"suggestions":"181"},{"ruleId":"178","severity":1,"message":"182","line":36,"column":7,"nodeType":"180","endLine":36,"endColumn":21,"suggestions":"183"},{"ruleId":"184","severity":1,"message":"185","line":59,"column":29,"nodeType":"186","endLine":59,"endColumn":69},{"ruleId":"178","severity":1,"message":"179","line":16,"column":7,"nodeType":"180","endLine":16,"endColumn":9,"suggestions":"187"},{"ruleId":"178","severity":1,"message":"182","line":28,"column":7,"nodeType":"180","endLine":28,"endColumn":22,"suggestions":"188"},{"ruleId":"174","severity":1,"message":"189","line":1,"column":16,"nodeType":"176","messageId":"177","endLine":1,"endColumn":25},{"ruleId":"174","severity":1,"message":"190","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":18},{"ruleId":"184","severity":1,"message":"185","line":23,"column":13,"nodeType":"186","endLine":23,"endColumn":82},{"ruleId":"184","severity":1,"message":"185","line":6,"column":13,"nodeType":"186","endLine":6,"endColumn":38},{"ruleId":"174","severity":1,"message":"175","line":10,"column":10,"nodeType":"176","messageId":"177","endLine":10,"endColumn":14},{"ruleId":"178","severity":1,"message":"179","line":16,"column":7,"nodeType":"180","endLine":16,"endColumn":9,"suggestions":"191"},{"ruleId":"178","severity":1,"message":"182","line":28,"column":7,"nodeType":"180","endLine":28,"endColumn":22,"suggestions":"192"},{"ruleId":"178","severity":1,"message":"179","line":21,"column":7,"nodeType":"180","endLine":21,"endColumn":9,"suggestions":"193"},{"ruleId":"178","severity":1,"message":"182","line":36,"column":7,"nodeType":"180","endLine":36,"endColumn":21,"suggestions":"194"},{"ruleId":"184","severity":1,"message":"185","line":59,"column":29,"nodeType":"186","endLine":59,"endColumn":69},{"ruleId":"174","severity":1,"message":"189","line":1,"column":16,"nodeType":"176","messageId":"177","endLine":1,"endColumn":25},{"ruleId":"184","severity":1,"message":"185","line":6,"column":13,"nodeType":"186","endLine":6,"endColumn":38},{"ruleId":"174","severity":1,"message":"190","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":18},{"ruleId":"184","severity":1,"message":"185","line":23,"column":13,"nodeType":"186","endLine":23,"endColumn":82},"no-unused-vars","'type' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["195"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["196"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["197"],["198"],"'useEffect' is defined but never used.","'Navigate' is defined but never used.",["199"],["200"],["201"],["202"],{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"203","fix":"207"},{"desc":"205","fix":"208"},{"desc":"203","fix":"209"},{"desc":"205","fix":"210"},{"desc":"203","fix":"211"},{"desc":"205","fix":"212"},"Update the dependencies array to be: [id]",{"range":"213","text":"214"},"Update the dependencies array to be: [id, diaryList, navigate]",{"range":"215","text":"216"},{"range":"217","text":"214"},{"range":"218","text":"216"},{"range":"219","text":"214"},{"range":"220","text":"216"},{"range":"221","text":"214"},{"range":"222","text":"216"},[688,690],"[id]",[1101,1115],"[id, diaryList, navigate]",[567,569],[932,947],[567,569],[932,947],[688,690],[1101,1115]]
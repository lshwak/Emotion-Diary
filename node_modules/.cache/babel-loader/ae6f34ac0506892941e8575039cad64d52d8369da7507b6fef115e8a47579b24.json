{"ast":null,"code":"var _jsxFileName = \"/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/pages/Diary.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { DiaryStateContext } from \"../App\";\nimport { getStringDate } from \"../utill/Date\";\nimport { emotionList } from \"../utill/emotion\";\nimport MyHeader from \"../components/MyHeader\";\nimport MyButton from \"../components/MyButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Diary = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const diaryList = useContext(DiaryStateContext);\n  const navigate = useNavigate();\n  const [data, setData] = useState();\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find(it => parseInt(it.id) === parseInt(id));\n      if (targetDiary) {\n        // 일기가 존재할 때\n        setData(targetDiary);\n      } else {\n        // 일기가 없을 때\n        alert(\"없는 일기입니다.\");\n        navigate('/', {\n          replace: true\n        });\n      }\n    }\n    ;\n  }, [id, diaryList]);\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DiaryPage\",\n      children: \"\\uB85C\\uB529\\uC911\\uC785\\uB2C8\\uB2E4...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  } else {\n    const curEmotionData = emotionList.find(it => parseInt(it.emotion_id) === parseInt(data.emotion));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Diarypage\",\n      children: /*#__PURE__*/_jsxDEV(MyHeader, {\n        headText: `${getStringDate(new Date(data.date))} 기록`,\n        leftChild: /*#__PURE__*/_jsxDEV(MyButton, {\n          text: \"< 뒤로가기\",\n          onClick: () => navigate(-1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this),\n        rightChild: /*#__PURE__*/_jsxDEV(MyButton, {\n          text: \"수정하기\",\n          onClick: () => navigate(`/edit/${data.id}`)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n};\n_s(Diary, \"hPix16G6AIzMMkNqCcj3+RCaRdk=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Diary;\nexport default Diary;\nvar _c;\n$RefreshReg$(_c, \"Diary\");","map":{"version":3,"names":["useContext","useEffect","useState","useNavigate","useParams","DiaryStateContext","getStringDate","emotionList","MyHeader","MyButton","jsxDEV","_jsxDEV","Diary","_s","id","diaryList","navigate","data","setData","length","targetDiary","find","it","parseInt","alert","replace","className","children","fileName","_jsxFileName","lineNumber","columnNumber","curEmotionData","emotion_id","emotion","headText","Date","date","leftChild","text","onClick","rightChild","_c","$RefreshReg$"],"sources":["/Users/hwak/Documents/workspace/playground/bite/emotion-diary/src/pages/Diary.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { DiaryStateContext } from \"../App\";\n\nimport { getStringDate } from \"../utill/Date\";\nimport { emotionList } from \"../utill/emotion\";\n\nimport MyHeader from \"../components/MyHeader\";\nimport MyButton from \"../components/MyButton\";\n\n\nconst Diary = () => {\n\n    const {id} = useParams();\n    const diaryList = useContext(DiaryStateContext);\n    const navigate = useNavigate();\n    const [data,setData] = useState();\n\n    useEffect(()=>{\n        if(diaryList.length >= 1) {\n            const targetDiary = diaryList.find((it) => parseInt(it.id) === parseInt(id));\n\n            if (targetDiary) {\n                // 일기가 존재할 때\n                setData(targetDiary);\n            } else {\n                // 일기가 없을 때\n                alert(\"없는 일기입니다.\");\n                navigate('/',{replace:true});\n            }\n        };\n    },[id,diaryList]);\n\n    if (!data) {\n        return <div className=\"DiaryPage\">로딩중입니다...</div>\n    } else {\n\n        const curEmotionData = emotionList.find((it)=> parseInt(it.emotion_id) === parseInt(data.emotion));\n        return (\n            <div className=\"Diarypage\">\n                <MyHeader \n                headText={`${getStringDate(new Date(data.date))} 기록`}\n                leftChild={\n                    <MyButton text={\"< 뒤로가기\"} onClick={() => navigate(-1)} />\n                }\n                rightChild={\n                    <MyButton text={\"수정하기\"} onClick={() => navigate(`/edit/${data.id}`)} />\n                }\n                />\n            </div>\n        );\n    } \n};\n\nexport default Diary;"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACvD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,SAASC,iBAAiB,QAAQ,QAAQ;AAE1C,SAASC,aAAa,QAAQ,eAAe;AAC7C,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG9C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAM;IAACC;EAAE,CAAC,GAAGV,SAAS,CAAC,CAAC;EACxB,MAAMW,SAAS,GAAGf,UAAU,CAACK,iBAAiB,CAAC;EAC/C,MAAMW,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACc,IAAI,EAACC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,CAAC;EAEjCD,SAAS,CAAC,MAAI;IACV,IAAGc,SAAS,CAACI,MAAM,IAAI,CAAC,EAAE;MACtB,MAAMC,WAAW,GAAGL,SAAS,CAACM,IAAI,CAAEC,EAAE,IAAKC,QAAQ,CAACD,EAAE,CAACR,EAAE,CAAC,KAAKS,QAAQ,CAACT,EAAE,CAAC,CAAC;MAE5E,IAAIM,WAAW,EAAE;QACb;QACAF,OAAO,CAACE,WAAW,CAAC;MACxB,CAAC,MAAM;QACH;QACAI,KAAK,CAAC,WAAW,CAAC;QAClBR,QAAQ,CAAC,GAAG,EAAC;UAACS,OAAO,EAAC;QAAI,CAAC,CAAC;MAChC;IACJ;IAAC;EACL,CAAC,EAAC,CAACX,EAAE,EAACC,SAAS,CAAC,CAAC;EAEjB,IAAI,CAACE,IAAI,EAAE;IACP,oBAAON,OAAA;MAAKe,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACrD,CAAC,MAAM;IAEH,MAAMC,cAAc,GAAGzB,WAAW,CAACc,IAAI,CAAEC,EAAE,IAAIC,QAAQ,CAACD,EAAE,CAACW,UAAU,CAAC,KAAKV,QAAQ,CAACN,IAAI,CAACiB,OAAO,CAAC,CAAC;IAClG,oBACIvB,OAAA;MAAKe,SAAS,EAAC,WAAW;MAAAC,QAAA,eACtBhB,OAAA,CAACH,QAAQ;QACT2B,QAAQ,EAAG,GAAE7B,aAAa,CAAC,IAAI8B,IAAI,CAACnB,IAAI,CAACoB,IAAI,CAAC,CAAE,KAAK;QACrDC,SAAS,eACL3B,OAAA,CAACF,QAAQ;UAAC8B,IAAI,EAAE,QAAS;UAACC,OAAO,EAAEA,CAAA,KAAMxB,QAAQ,CAAC,CAAC,CAAC;QAAE;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAC3D;QACDU,UAAU,eACN9B,OAAA,CAACF,QAAQ;UAAC8B,IAAI,EAAE,MAAO;UAACC,OAAO,EAAEA,CAAA,KAAMxB,QAAQ,CAAE,SAAQC,IAAI,CAACH,EAAG,EAAC;QAAE;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MACzE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAEd;AACJ,CAAC;AAAClB,EAAA,CAzCID,KAAK;EAAA,QAEMR,SAAS,EAELD,WAAW;AAAA;AAAAuC,EAAA,GAJ1B9B,KAAK;AA2CX,eAAeA,KAAK;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}